{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","id","name","email","className","src","alt","CardList","console","log","monsters","map","SearchBox","placeholder","onChange","type","App","searchFieldHandler","e","setState","searchField","target","value","state","fetch","then","res","json","users","catch","err","message","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAeeA,G,YAZF,SAACC,GAAW,IAAD,EACiBA,EAAhCC,QAAWC,EADI,EACJA,GAAIC,EADA,EACAA,KAAMC,EADN,EACMA,MAE7B,OACC,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAG,+BAA0BJ,EAA1B,0BAAsDK,IAAI,YAClE,6BAAKJ,IACN,4BAAIC,SCKSI,EAXE,SAACR,GAEjB,OADAS,QAAQC,IAAIV,GAEX,qBAAKK,UAAU,YAAf,SACEL,EAAMW,SAASC,KAAI,SAACX,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCKRW,G,MAXG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAChC,OACC,uBACCV,UAAU,SACVW,KAAK,SACLF,YAAaA,EACbC,SAAUA,MCmCEE,G,wDAtCd,aAAe,IAAD,8BACb,gBAmBDC,mBAAqB,SAACC,GACrB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAnBrC,EAAKC,MAAQ,CAAEb,SAAU,GAAIU,YAAa,IAF7B,E,gEAKO,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACNpB,QAAQC,IAAImB,GACZ,EAAKT,UAAS,SAACI,GAAD,mBAAC,eACXA,GADU,IAEbb,SAAS,GAAD,mBAAMkB,GAAN,YAAgBL,EAAMb,mBAG/BmB,OAAM,SAACC,GACPtB,QAAQC,IAAIqB,EAAIC,c,+BAQT,IAAD,EAC0BC,KAAKT,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZa,EAAmBvB,EAASwB,QAAO,SAAAlC,GAAO,OAAIA,EAAQE,KAAKiC,cAAcC,SAAShB,EAAYiB,wBAEpG,OACC,sBAAKjC,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CAAWS,YAAY,kBAAkBC,SAAUkB,KAAKf,qBACxD,cAAC,EAAD,CAAUP,SAAUuB,W,GAjCNK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8de62797.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => {\r\n\tconst { monster: { id, name, email} } = props;\r\n\r\n\treturn (\r\n\t\t<div className='card-container'>\r\n\t\t\t<img src={`https://robohash.org/${id}?set=set2&size=180x180`} alt='monster' />\r\n\t\t\t<h2>{name}</h2>\r\n  <p>{email}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from '../card/card.component';\r\n\r\nconst CardList = (props) => {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div className='card-list'>\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, onChange}) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName='search'\r\n\t\t\ttype='search'\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={onChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { monsters: [], searchField: '' };\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((users) => {\n\t\t\t\tconsole.log(users);\n\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\t...state,\n\t\t\t\t\tmonsters: [...users, ...state.monsters],\n\t\t\t\t}));\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.message);\n\t\t\t});\n\t}\n\n\tsearchFieldHandler = (e) => {\n\t\tthis.setState({searchField: e.target.value});\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox placeholder='search monsters' onChange={this.searchFieldHandler} />\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}